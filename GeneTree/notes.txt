//this files contains some of the ongoing notes.  things in here should be cleared out and made into Issues or just implemented.

consider letting the less than test pick a value instead of doing min/max test

track score over time for different generations and plot the results (look for when/where they top out)

new trees should be allowed to make genetic changes without having to survive first... get some more randomness into things

might be good to look for low performing nodes and make changes to them (could just NO CLASS to get rid of bad ones)

do some analysis to determine which data columns are showing up most frequently for analysis
 - continue this to see which columns do best for predicting which class?

need to check for instances where the same test shows up below a node in the tree
 - this also occurs when both terminal nodes point to the same thing

need to see which generated features show up in the tree... keep those and generate more (GA for features almost)

need a quick way to remove features from the data (ideally w/o removing original data)

only compute calcualtedcolumns on the test data... save the formula to use for other values as needed

possible to group categories since the data is ordinal?  maybe not useful now, but good to remember

recreate the delete node option (force class to NO CLASS)

create a general method to add a NO CLASS node to a tree at a give spot (or to replace a given spot) ReplaceWithBlank()

reduce output on each generation (not checking the results... coming in too quick)

output a tree ready for viz (or viz inside the program)

add param for the number of initial populations to include

output an initial status to make it clear that the program is running

next commit message
 - Normalize data from 0 to 1 by default
 - Default to BNP data
 - ignore structural location in xml?
 - force missing categorical value to be -2 
 - go to 3 digits on doubles by default (outputs)
 - update default values for the class power and node count penalties