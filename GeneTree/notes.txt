//this files contains some of the ongoing notes.  things in here should be cleared out and made into Issues or just implemented.

output an initial status to make it clear that the program is running

take nodes with a large NO CLASS and see if they can be split or reclassed better.  especially bad when all are NO CLASS but still might be good

really need to find a way to go after the small side of the classifier: group 0 has an awful success rate

node optimizer might work best with the node splitter
 - work great together since it needs to generate a test and new decision nodes

is it possible to build a second layer of trees for anything that is classed as 0 on the first round?  try to break up the split better

add the missing count to the output summary

use a weighted selector to choose which trees to pick nodes from

update the tree to return probabilities instead of a single class (or update the tree to return scores which can be used for a loss function)

compute a proper loss function for the tree search part

next commit message
 - added some add'l calculations to the ConfusionMatrix class, they are not helping much
 - modified the score metric to add a small piece to values that could be 0
 - added a GeneticOperation to optimize the split on a node using the Gini impurity as the test
 - output source during generations
 - added a new operation to set the node class to the best class (by row max) in the data.  it overwrites NO CLASS nodes also
 - added a collection for _testValues to prevent the missing test value showing up for categorical tests
 